/*
 * Â© 2017 EntIT Software LLC, a Micro Focus company, L.P.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *   http://www.apache.org/licenses/LICENSE-2.0
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
    id "org.jetbrains.intellij" version "0.4.21"
}

project.group = projectGroup
project.version = projectVersion

apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: "idea"
apply plugin: "org.jetbrains.intellij"

repositories {
    //local
    mavenLocal()
    mavenCentral()
    maven { url 'http://nexus.almoctane.com:8081/content/repositories/mqm-snapshots' }
}

clean.doLast {
    file('.sandbox').deleteDir()
}

sourceSets {
    main {
        java.srcDir 'src/main/java'
        resources.srcDir 'src/main/resources'
    }
    test {
        java.srcDir 'src/test/java'
        resources.srcDir 'src/test/resources'
    }
}

dependencies {
    compile("com.hpe.adm.octane.ideplugins:octane-plugin-common:$commonVersion"){
        exclude group: 'org.slf4j', module: 'slf4j-api'
    }

    compile group: 'org.jsoup', name: 'jsoup', version: '1.8.3'

    compile('com.google.inject:guice:4.0') {
        exclude group: 'com.google.guava', module: 'guava'
    }
    compile('com.google.inject.extensions:guice-multibindings:4.0') {
        exclude group: 'com.google.guava', module: 'guava'
    }

    testCompile group: 'junit', name: 'junit', version: '4.11'
}

intellij {
    plugins 'java'

    version project.hasProperty("intellijVersion") ? project.getProperty("intellijVersion") : ideaVersion
    //to debug the plugin on other platforms comment out alternativeIdePath and set the path to the installation
    //folder of the IDE
    //alternativeIdePath 'C:\\DevTools\\PyCharm Community Edition 2018.2.1'

    plugins = ["maven", "gradle"]
    pluginName = project.hasProperty('zipname') ? project.getProperty('zipname') : "Octane IntelliJ Plugin"
    updateSinceUntilBuild false

    downloadSources true
    sandboxDirectory project.rootDir.canonicalPath + "/.sandbox"
}

tasks.withType(JavaExec) {
    if (System.getProperty('DEBUG', 'false') == 'true') {
        jvmArgs '-Xdebug', '-Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=9099'
    }
}

